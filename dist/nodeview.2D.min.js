"use strict";function Graph2D(n){var e=this,t=1,o=0,i=0,r=[],u=null;e.getContext=function(){return u};var c="free",a=null,d=function(n){if("dragging"===c)return a=null,void(c="free");var t=e.getContext().canvas.relMouseCoords(n);r.forEach(function(n){n.wasClicked(e,[t.x,t.y])&&null!==n.onclick&&void 0!==n.onclick&&n.onclick()})},s=function(n){var t=e.getContext().canvas.relMouseCoords(n);r.forEach(function(n){n.wasClicked(e,[t.x,t.y])&&(console.log(c),c="hold",a={item:n,itemPos:n.getPosition(),mousePos:[t.x,t.y]})})},l=function(n){},f=function(n){var t=e.getContext().canvas.relMouseCoords(n);if("hold"===c&&(c="dragging"),"dragging"===c){var o=a.itemPos,i=a.mousePos;a.item.setPosition(t.x+(o[0]-i[0]),t.y+(o[1]-i[1]))}},g=function(n){},v=function(n){},h=function(n){n.addEventListener("mouseup",function(n){d(n)}),n.addEventListener("mousedown",function(n){s(n)}),n.addEventListener("mouseout",function(n){l(n)}),n.addEventListener("mousemove",function(n){f(n)}),n.addEventListener("mousewheel",function(n){g(n)}),n.addEventListener("dblclick",function(n){v(n)})};null!==n&&void 0!==n&&(u=n.getContext("2d"),h(n)),e.getPosition=function(){return[o,i]},e.getScale=function(){return t};var m=function(n,e){var t=e.getPosition(),o=e.getScale(),i=n.getRenderData().size,r=[(n.getPosition()[0]-i[0]/2+t[0])*o,(n.getPosition()[1]-i[1]/2+t[1])*o];e.getContext().fillStyle=n.getRenderData().color,e.getContext().fillRect(r[0],r[1],i[0]*o,i[1]*o)},C=function(n,e,t){var o=e.getPosition(),i=e.getScale(),r=n.getRenderData().size,u=[n.getPosition()[0]-r[0]/2+o[0]*i,n.getPosition()[1]-r[1]/2+o[1]*i],c=[r[0]*i,r[1]*i];return pointsInsideRect([u[0],u[1],c[0],c[1]],t)};e.createNode=function(){var n=new Node2D;return n.setRenderDataByKey("size",[75,75]),n.setRenderDataByKey("color","#4CAF50"),n.setRenderFunction(m,C),r.push(n),n};var w=function(){u.canvas.width=u.canvas.offsetWidth,u.canvas.height=u.canvas.offsetHeight,u.clearRect(0,0,u.canvas.width,u.canvas.height),r.forEach(function(n){null!==n.getRenderFunction()&&void 0!==n.getRenderFunction()&&n.render(n,e)}),window.requestAnimationFrame(w)};w()}function Node2D(){var n=this,e="Node Name",t="Data",o={},i=0,r=0;n.onclick=function(){console.log("Clicked")};var u=null,c=null;n.setRenderDataByKey=function(n,e){o[n]=e},n.getRenderData=function(){return o},n.wasClicked=function(e,t){if(null!==c&&void 0!==c){var o=c(n,e,t);if(o===!0||o===!1)return o}return!1},n.setRenderFunction=function(n,e){if(null===n)throw"Error setting render funciton for Node! Attempting to add a null render method";if(null===e)throw"Error setting render funciton for Node! Attempting to add a null click detection method";u=n,c=e},n.getRenderFunction=function(){return u},n.render=function(n,e){if(null===u)throw"Failure to render node! There's no render function defined!";u(n,e)},n.getPosition=function(){return[i,r]},n.setPosition=function(n,e){i=n,r=e},n.getContents=function(){return e+" - "+t}}function pointsInsideRect(n,e){if(null===n||void 0===n||null===n.length||void 0===n.length||4!==n.length)throw"Invalid rect argument! Expecting array in format [x, y, width, height].  Instead recieved: "+n;if(null===e||void 0===e||null===e.length||void 0===e.length||2!==e.length)throw"Invalid point argument! Expecting array in format [x, y].  Instead recieved: "+e;return n[0]<=e[0]&&e[0]<=n[0]+n[2]&&n[1]<=e[1]&&e[1]<=n[1]+n[3]}!function(){function n(n){var e=0,t=0,o=0,i=0,r=this;do e+=r.offsetLeft-r.scrollLeft,t+=r.offsetTop-r.scrollTop;while(r=r.offsetParent);return o=n.pageX-e,i=n.pageY-t,{x:o,y:i}}HTMLCanvasElement.prototype.relMouseCoords=n}();